% \iffalse meta-comment
%
% Copyright (C) 2018--2021 by Alexara Wu <alexarawu@outlook.com>
%
% This work may be distributed and/or modified under the
% conditions of the LaTeX Project Public License, either
% version 1.3c of this license or (at your option) any later
% version. The latest version of this license is in:
%
%   http://www.latex-project.org/lppl.txt
%
% and version 1.3 or later is part of all distributions of
% LaTeX version 2005/12/01 or later.
%
% This work has the LPPL maintenance status `maintained'.
%
% The Current Maintainer of this work is Alexara Wu.
%
%<*internal>
\iffalse
%</internal>
%
%<*internal>
\fi
\begingroup
  \def\NameOfLaTeXe{LaTeX2e}
\expandafter\endgroup\ifx\NameOfLaTeXe\fmtname\else
\csname fi\endcsname
%</internal>
%
%<*install>
\input l3docstrip.tex
\keepsilent
\askforoverwritefalse

\preamble

    Copyright (C) 2018--2021 by Alexara Wu <alexarawu@outlook.com>

    This work may be distributed and/or modified under the
    conditions of the LaTeX Project Public License, either
    version 1.3c of this license or (at your option) any later
    version. The latest version of this license is in:

      http://www.latex-project.org/lppl.txt

    and version 1.3 or later is part of all distributions of
    LaTeX version 2005/12/01 or later.

    This work has the LPPL maintenance status `maintained'.

    The Current Maintainer of this work is Alexara Wu.

\endpreamble

\generate{
  \usedir{tex/latex/sjtuthesis}
    \file{\jobname.cls}              {\from{\jobname.dtx}{entry}}
    \file{\jobname-postgraduate.cls} {\from{\jobname.dtx}{class,pg}}
    \file{\jobname-undergraduate.cls}{\from{\jobname.dtx}{class,ug}}
    \file{\jobname-lang-zh.cfg}      {\from{\jobname.dtx}{lang,zh}}
    \file{\jobname-lang-en.cfg}      {\from{\jobname.dtx}{lang,en}}
    \file{sjtu-text-font-newtx.def}  {\from{\jobname.dtx}{textfont,newtx}}
    \file{sjtu-text-font-newpx.def}  {\from{\jobname.dtx}{textfont,newpx}}
    \file{sjtu-text-font-lm.def}     {\from{\jobname.dtx}{textfont,lm}}
    \file{sjtu-text-font-stixtwo.def}{\from{\jobname.dtx}{textfont,stixtwo}}
    \file{sjtu-text-font-xits.def}   {\from{\jobname.dtx}{textfont,xits}}
    \file{sjtu-text-font-newcm.def}  {\from{\jobname.dtx}{textfont,newcm}}
    \file{sjtu-text-font-cambria.def}{\from{\jobname.dtx}{textfont,cambria}}
    \file{sjtu-text-font-times.def}  {\from{\jobname.dtx}{textfont,times}}
    \file{sjtu-math-font-newtx.def}  {\from{\jobname.dtx}{mathfont,newtx}}
    \file{sjtu-math-font-newpx.def}  {\from{\jobname.dtx}{mathfont,newpx}}
    \file{sjtu-math-font-lm.def}     {\from{\jobname.dtx}{mathfont,lm}}
    \file{sjtu-math-font-stixtwo.def}{\from{\jobname.dtx}{mathfont,stixtwo}}
    \file{sjtu-math-font-xits.def}   {\from{\jobname.dtx}{mathfont,xits}}
    \file{sjtu-math-font-newcm.def}  {\from{\jobname.dtx}{mathfont,newcm}}
    \file{sjtu-math-font-cambria.def}{\from{\jobname.dtx}{mathfont,cambria}}
    \file{sjtu-cjk-font-windows.def} {\from{\jobname.dtx}{cjkfont,windows}}
    \file{sjtu-cjk-font-mac.def}     {\from{\jobname.dtx}{cjkfont,mac}}
    \file{sjtu-cjk-font-ubuntu.def}  {\from{\jobname.dtx}{cjkfont,ubuntu}}
    \file{sjtu-cjk-font-adobe.def}   {\from{\jobname.dtx}{cjkfont,adobe}}
    \file{sjtu-cjk-font-fandol.def}  {\from{\jobname.dtx}{cjkfont,fandol}}
    \file{sjtu-cjk-font-founder.def} {\from{\jobname.dtx}{cjkfont,founder}}
%</install>
%<*internal>
  \usedir{source/latex/sjtuthesis}
    \file{\jobname.ins}              {\from{\jobname.dtx}{install}}
%</internal>
%<*install>
}

\obeyspaces
\Msg{*************************************************************}
\Msg{*                                                           *}
\Msg{* To finish the installation you have to move the following *}
\Msg{* files into a directory searched by TeX:                   *}
\Msg{*                                                           *}
\Msg{* The recommended directory is TDS:tex/latex/sjtuthesis     *}
\Msg{*                                                           *}
\Msg{*     sjtuthesis.cls                                        *}
\Msg{*                                                           *}
\Msg{* To produce the documentation, run the file sjtuthesis.dtx *}
\Msg{* through XeLaTeX.                                          *}
\Msg{*                                                           *}
\Msg{* Happy TeXing!                                             *}
\Msg{*                                                           *}
\Msg{*************************************************************}

\endbatchfile
%</install>
%
%<*internal>
\fi
%</internal>
%
%<entry|class>\NeedsTeXFormat{LaTeX2e}
%<entry|class>\RequirePackage{expl3}
%<*!(driver|install)>
%<+!driver>\GetIdInfo$Id$
%<entry>  {Thesis template for Shanghai Jiao Tong University}
%<entry>\ProvidesExplClass{sjtuthesis}
%<pg>  {Thesis template for Shanghai Jiao Tong University (for postgraduates)}
%<pg>\ProvidesExplClass{sjtuthesis-postgraduate}
%<ug>  {Thesis template for Shanghai Jiao Tong University (for undergraduates)}
%<ug>\ProvidesExplClass{sjtuthesis-undergraduate}
%<lang&zh>  {Chinese language specific config (SJTUThesis)}
%<lang&zh>\ProvidesExplFile{sjtuthesis-lang-zh.cfg}
%<lang&en>  {English language specific config (SJTUThesis)}
%<lang&en>\ProvidesExplFile{sjtuthesis-lang-en.cfg}
%<textfont&newtx>  {New TX text fonts definition (SJTUThesis)}
%<textfont&newtx>\ProvidesExplFile{sjtu-text-font-newtx.def}
%<textfont&newpx>  {New PX text fonts definition (SJTUThesis)}
%<textfont&newpx>\ProvidesExplFile{sjtu-text-font-newpx.def}
%<textfont&stixtwo>  {STIX Two text fonts definition (SJTUThesis)}
%<textfont&stixtwo>\ProvidesExplFile{sjtu-text-font-stixtwo.def}
%<textfont&xits>  {XITS text fonts definition (SJTUThesis)}
%<textfont&xits>\ProvidesExplFile{sjtu-text-font-xits.def}
%<textfont&lm>  {Latin Modern text fonts definition (SJTUThesis)}
%<textfont&lm>\ProvidesExplFile{sjtu-text-font-lm.def}
%<textfont&newcm>  {New Computer Modern text fonts definition (SJTUThesis)}
%<textfont&newcm>\ProvidesExplFile{sjtu-text-font-newcm.def}
%<textfont&cambria>  {Cambria text fonts definition (SJTUThesis)}
%<textfont&cambria>\ProvidesExplFile{sjtu-text-font-cambria.def}
%<textfont&times>  {Times text fonts definition (SJTUThesis)}
%<textfont&times>\ProvidesExplFile{sjtu-text-font-times.def}
%<mathfont&newtx>  {New TX math fonts definition (SJTUThesis)}
%<mathfont&newtx>\ProvidesExplFile{sjtu-math-font-newtx.def}
%<mathfont&newpx>  {New PX math fonts definition (SJTUThesis)}
%<mathfont&newpx>\ProvidesExplFile{sjtu-math-font-newpx.def}
%<mathfont&stixtwo>  {STIX Two math fonts definition (SJTUThesis)}
%<mathfont&stixtwo>\ProvidesExplFile{sjtu-math-font-stixtwo.def}
%<mathfont&xits>  {XITS math fonts definition (SJTUThesis)}
%<mathfont&xits>\ProvidesExplFile{sjtu-math-font-xits.def}
%<mathfont&lm>  {Latin Modern math fonts definition (SJTUThesis)}
%<mathfont&lm>\ProvidesExplFile{sjtu-math-font-lm.def}
%<mathfont&newcm>  {New Computer Modern math fonts definition (SJTUThesis)}
%<mathfont&newcm>\ProvidesExplFile{sjtu-math-font-newcm.def}
%<mathfont&cambria>  {Cambria math fonts definition (SJTUThesis)}
%<mathfont&cambria>\ProvidesExplFile{sjtu-math-font-cambria.def}
%<cjkfont&windows>  {Windows CJK fonts definition (SJTUThesis)}
%<cjkfont&windows>\ProvidesExplFile{sjtu-cjk-font-windows.def}
%<cjkfont&mac>  {macOS CJK fonts definition (SJTUThesis)}
%<cjkfont&mac>\ProvidesExplFile{sjtu-cjk-font-mac.def}
%<cjkfont&ubuntu>  {Ubuntu CJK fonts definition (SJTUThesis)}
%<cjkfont&ubuntu>\ProvidesExplFile{sjtu-cjk-font-ubuntu.def}
%<cjkfont&adobe>  {Adobe CJK fonts definition (SJTUThesis)}
%<cjkfont&adobe>\ProvidesExplFile{sjtu-cjk-font-adobe.def}
%<cjkfont&fandol>  {Fandol CJK fonts definition (SJTUThesis)}
%<cjkfont&fandol>\ProvidesExplFile{sjtu-cjk-font-fandol.def}
%<cjkfont&founder>  {Founder CJK fonts definition (SJTUThesis)}
%<cjkfont&founder>\ProvidesExplFile{sjtu-cjk-font-founder.def}
%<!driver>  {\ExplFileDate}{\ExplFileVersion}{\ExplFileDescription}
%</!(driver|install)>
%
%<*driver>
\documentclass{ctxdoc}
\begin{document}
  \DocInput{\jobname.dtx}
  \IndexLayout
  \PrintChanges
  \PrintIndex
\end{document}
%</driver>
% \fi
%
% \GetFileInfo{\jobname.dtx}
%
% \begin{documentation}
%
% \section{介绍}
%
% Hello, world! 你好，世界！
%
% \end{documentation}
%
% \begin{implementation}
%
% \clearpage
% \section{代码实现}
%
% 本模板使用 \LaTeXiii{} 语法编写，依赖 \pkg{expl3} 环境，
% 并需调用 \pkg{l3packages} 中的相关宏包。
%
% \subsection{模板入口}
%
% 根据选项载入相应的子类。
%    \begin{macrocode}
%<@@=sjtu_ent>
%<*entry>
\RequirePackage { l3keys2e }
\int_new:N \g_@@_thesis_type_int
%    \end{macrocode}
%
% 定义 |sjtu/diversion| 键值类。
%    \begin{macrocode}
\keys_define:nn { sjtu / diversion }
  {
    type .choice: ,
    type .value_required:n = true ,
    type .choices:nn =
      { doctor, master, bachelor }
      { \int_set_eq:NN \g_@@_thesis_type_int \l_keys_choice_int } ,
    type .initial:n = { master } ,
    unknown .code:n = { }
  }
\ProcessKeysOptions { sjtu / diversion }
\int_compare:nNnTF { \g_@@_thesis_type_int } < { 3 }
  { \LoadClassWithOptions { sjtuthesis-postgraduate  } }
  { \LoadClassWithOptions { sjtuthesis-undergraduate } }
%</entry>
%    \end{macrocode}
%
% \subsection{准备}
%
% 检查 \LaTeXiii{} 编程环境。
%    \begin{macrocode}
%<@@=sjtu>
%<*class>
\RequirePackage { xparse, xtemplate, l3keys2e }
\clist_map_inline:nn { expl3, xparse, xtemplate, l3keys2e }
  {
    \@ifpackagelater {#1} { 2018/05/12 }
      { } { \msg_error:nnn { sjtuthesis } { l3-too-old } {#1} }
  }
\msg_new:nnn { sjtuthesis } { l3-too-old }
  {
    Package~ "#1"~ is~ too~ old. \\\\
    Please~ update~ an~ up-to-date~ version~ of~ the~ bundles \\
    "l3kernel"~ and~ "l3packages"~ using~ your~ TeX~ package \\
    manager~ or~ from~ CTAN.
  }
%    \end{macrocode}
%
% 目前 \cls{sjtuthesis} 仅支持 \XeTeX{} 和 \LuaTeX{}。
%    \begin{macrocode}
\sys_if_engine_xetex:F
  {
    \sys_if_engine_luatex:F
      {
        \msg_fatal:nnx { sjtuthesis } { unsupported-engine }
          { \c_sys_engine_str }
      }
  }
\msg_new:nnn { sjtuthesis } { unsupported-engine }
  {
    The~ sjtuthesis~ class~ requires~ either~ XeTeX~ or~ LuaTeX. \\\\
    "#1"~ is~ not~ supported~ at~ present.~ You~ must~ change \\
    your~ typesetting~ engine~ to~ "xelatex"~ or~ "lualatex".
  }
%    \end{macrocode}
%
% 目前 \cls{sjtuthesis} 仅支持 \XeTeX{} 和 \LuaTeX{}。
%
% 定义 \texttt{sjtuthesis} 宏。
%    \begin{macrocode}
\NewDocumentCommand\sjtuthesis {} { SJTU\textsc{Thesis} }
%    \end{macrocode}
%
% \subsubsection{内部变量}
%
% \begin{variable}{\l_@@_tmp_tl,\l_@@_tmp_int,\l_@@_tmp_box,\l_@@_tmp_dim}
% 临时变量。
%    \begin{macrocode}
\tl_clear_new:N \l_@@_tmp_tl
\int_new:N \l_@@_tmp_int
\box_new:N \l_@@_tmp_box
\dim_new:N \l_@@_tmp_dim
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_thesis_type_tl,\g_@@_thesis_type_int}
% 论文类型。
%    \begin{macrocode}
\tl_new:N  \g_@@_thesis_type_tl
\int_new:N \g_@@_thesis_type_int
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_lang_tl}
% 论文语言。
%    \begin{macrocode}
\tl_new:N  \g_@@_lang_tl
\tl_new:N  \g_@@_lang_aux_tl
\tl_set:Nn \g_@@_lang_aux_tl { zh }
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}
%   {\g_@@_zihao_tl,\g_@@_font_size_dim,\g_@@_line_skip_dim,
%    \g_@@_default_line_skip_dim,\g_@@_line_spread_fp}
% 字号大小与行距。
%    \begin{macrocode}
\tl_new:N \g_@@_zihao_tl
\dim_new:N \g_@@_font_size_dim
\dim_new:N \g_@@_line_skip_dim
\dim_new:N \g_@@_default_line_skip_dim
\fp_new:N \g_@@_line_spread_fp
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}
%   {\g_@@_text_font_tl,\g_@@_math_font_tl,\g_@@_cjk_font_tl}
% 字体配置。
%    \begin{macrocode}
\tl_new:N \g_@@_text_font_tl
\tl_new:N \g_@@_math_font_tl
\tl_new:N \g_@@_cjk_font_tl
\tl_new:N \g_@@_save_encodingdefault_tl
\tl_new:N \g_@@_save_rmdefault_tl
\tl_new:N \g_@@_save_sfdefault_tl
\tl_new:N \g_@@_save_ttdefault_tl
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_review_bool}
% 盲审模式。
%    \begin{macrocode}
\bool_new:N \g_@@_review_bool
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}
%  {\g_@@_ctexbook_options_clist,\g_@@_hyperref_options_clist}
% 分别保存由 \cls{sjtuthesis} 传入 \cls{ctexbook} 文档类和
% \pkg{hyperref} 宏包的选项列表。
%    \begin{macrocode}
\clist_new:N \g_@@_ctexbook_options_clist
\clist_new:N \g_@@_hyperref_options_clist
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_twoside_bool}
% 是否开启双页模式。
%    \begin{macrocode}
\bool_new:N \g_@@_twoside_bool
%<pg>\bool_set_true:N  \g_@@_twoside_bool
%<ug>\bool_set_false:N \g_@@_twoside_bool
%    \end{macrocode}
% \end{variable}
%
% \begin{variable}{\g_@@_openright_bool}
% 是否在奇数页开始新章。
%    \begin{macrocode}
\bool_new:N \g_@@_openright_bool
%<pg>\bool_set_true:N  \g_@@_openright_bool
%<ug>\bool_set_false:N \g_@@_openright_bool
%    \end{macrocode}
% \end{variable}
%
% \subsubsection{内部函数}
%
% \begin{macro}[int]{\@@_load_lang:}
%    \begin{macrocode}
\cs_new_protected:Nn \@@_load_lang:
  {
    \ctex_push_file:
      \file_if_exist_input:nF { sjtuthesis-lang- \g_@@_lang_tl .cfg }
        { \file_input:n { sjtuthesis-lang-zh.cfg } }
    \ctex_pop_file:
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}[int]{\@@_dim_set_to_wd:Nn,\@@_dim_add_to_wd:Nn}
%    \begin{macrocode}
\cs_new:Npn \@@_dim_set_to_wd:Nn #1#2
  {
    \hbox_set:Nn \l_@@_tmp_box {#2}
    \dim_set:Nn #1 { \box_wd:N \l_@@_tmp_box }
  }
\cs_new:Npn \@@_dim_add_to_wd:Nn #1#2
  {
    \hbox_set:Nn \l_@@_tmp_box {#2}
    \dim_add:Nn #1 { \box_wd:N \l_@@_tmp_box }
  }
\cs_generate_variant:Nn \@@_dim_set_to_wd:Nn { cn }
\cs_generate_variant:Nn \@@_dim_add_to_wd:Nn { cn }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_define_name:nn,\@@_define_name:nnn}
% 用来定义默认名称的辅助函数。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_define_name:nn #1#2
  { \tl_const:cn { c_@@_name_ #1 _tl } {#2} }
\cs_new_protected:Npn \@@_define_name:nnn #1#2#3
  {
    \tl_const:cn { c_@@_name_ #1 _zh_tl } {#2}
    \tl_const:cn { c_@@_name_ #1 _en_tl } {#3}
    \tl_gset_eq:cc { c_@@_name_ #1 _tl }
      { c_@@_name_ #1 _ \g_@@_lang_tl _tl }
  }
\cs_new_protected:Npn \@@_define_name_from_list:nNn  #1#2#3
  {
    \tl_const:cx { c_@@_name_ #1 _tl }
      { \clist_item:nn {#3} {#2} }
  }
\cs_new_protected:Npn \@@_define_name_from_list:nNnn #1#2#3#4
  {
    \tl_const:cx { c_@@_name_ #1 _zh_tl }
      { \clist_item:nn {#3} {#2} }
    \tl_const:cx { c_@@_name_ #1 _en_tl }
      { \clist_item:nn {#4} {#2} }
    \tl_gset_eq:cc { c_@@_name_ #1 _tl }
      { c_@@_name_ #1 _ \g_@@_lang_tl _tl }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@@_patch_cmd:Nnn,\@@_appto_cmd:Nn}
% 补丁工具，来自 \pkg{ctexpatch} 宏包。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_patch_cmd:Nnn #1#2#3
  {
    \ctex_patch_cmd_once:NnnnTF #1 { } {#2} {#3}
      { } { \ctex_patch_failure:N #1 }
  }
\cs_new_protected:Npn \@@_appto_cmd:Nn #1#2
  {
    \ctex_appto_cmd:NnnTF #1 { } {#2}
      { } { \ctex_patch_failure:N #1 }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{选项处理}
%
% 定义 |sjtu/option| 键值类。
%    \begin{macrocode}
\keys_define:nn { sjtu / option }
  {
%    \end{macrocode}
%
%    \begin{macrocode}
    type .choice: ,
    type .value_required:n = true ,
    type .choices:nn =
      { doctor, master, bachelor }
      { \int_gset_eq:NN \g_@@_thesis_type_int \l_keys_choice_int } ,
%<pg>    type .initial:n = { master   } ,
%<ug>    type .initial:n = { bachelor } ,
%    \end{macrocode}
%
%
%    \begin{macrocode}
    lang .choice: ,
    lang .value_required:n = true ,
    lang .choices:nn =
      { zh, en }
      {
        \tl_gset_eq:NN \g_@@_lang_tl \l_keys_choice_tl
        \int_compare:nNnT { \l_keys_choice_int } = { 1 }
          { \tl_gset:Nn \g_@@_lang_aux_tl { en } }
      } ,
    lang .initial:n = { zh } ,
%    \end{macrocode}
%
% 字号大小。
%    \begin{macrocode}
    zihao .choice: ,
    zihao .value_required:n = true ,
    zihao / -4 .code:n =
      {
        \tl_gset:Nn  \g_@@_zihao_tl { -4 }
        \dim_gset:Nn \g_@@_font_size_dim         { 12   bp }
        \dim_gset:Nn \g_@@_default_line_skip_dim { 20   bp }
      } ,
    zihao /  5 .code:n =
      {
        \tl_gset:Nn  \g_@@_zihao_tl {  5 }
        \dim_gset:Nn \g_@@_font_size_dim         { 10.5 bp }
        \dim_gset:Nn \g_@@_default_line_skip_dim { 15.6 bp }
      } ,
%<pg>    zihao .initial:n = { -4 } ,
%<ug>    zihao .initial:n = {  5 } ,
%    \end{macrocode}
%
% 行间距。
%    \begin{macrocode}
    lineskip .dim_gset:N = \g_@@_line_skip_dim ,
%    \end{macrocode}
%
% 字体配置。
%    \begin{macrocode}
    text-font .tl_gset:N = \g_@@_text_font_tl ,
    text-font .initial:n = { newtx } ,
    math-font .tl_gset:N = \g_@@_math_font_tl ,
    cjk-font  .tl_gset:N = \g_@@_cjk_font_tl ,
%    \end{macrocode}
%
% 单面或双面模式。
%    \begin{macrocode}
    oneside .value_forbidden:n = true,
    twoside .value_forbidden:n = true,
    oneside .code:n =
      { \bool_set_false:N \g_@@_twoside_bool } ,
    twoside .code:n =
      { \bool_set_true:N  \g_@@_twoside_bool } ,
%    \end{macrocode}
%
% 是否奇数页开章。
%    \begin{macrocode}
    openany   .value_forbidden:n = true,
    openright .value_forbidden:n = true,
    openany   .code:n =
      { \bool_set_false:N \g_@@_openright_bool } ,
    openright .code:n =
      { \bool_set_true:N  \g_@@_openright_bool } ,
%    \end{macrocode}
%
% 盲审模式。
%    \begin{macrocode}
    review .bool_gset:N = \g_@@_review_bool ,
    review .initial:n = false ,
%    \end{macrocode}
%
% 处理未知选项。
%    \begin{macrocode}
    unknown .code:n = { \msg_error:nn { sjtuthesis } { unknown-option } }
  }
\msg_new:nnn { sjtuthesis } { unknown-option }
  { Class~ option~ "\l_keys_key_tl"~ is~ unknown. }
%    \end{macrocode}
%
% 将文档类选项传给 |sjtu/option|。
%    \begin{macrocode}
\ProcessKeysOptions { sjtu / option }
%    \end{macrocode}
%
% 计算行距倍数。
%    \begin{macrocode}
\dim_compare:nNnT \g_@@_line_skip_dim < \g_@@_font_size_dim
  { \dim_set_eq:NN \g_@@_line_skip_dim \g_@@_default_line_skip_dim }
\fp_set:Nn \g_@@_line_spread_fp
  { \dim_ratio:nn { \g_@@_line_skip_dim } { \g_@@_font_size_dim } / 1.2 }
%    \end{macrocode}
%
% 页面模式设置。
%    \begin{macrocode}
\bool_if:NF \g_@@_twoside_bool
  { \clist_put_right:Nn \g_@@_ctexbook_options_clist { oneside } }
\bool_if:NF \g_@@_openright_bool
  { \clist_put_right:Nn \g_@@_ctexbook_options_clist { openany } }
%    \end{macrocode}
%
% \subsection{载入宏包、文档类}
%
% 将选项传入 \pkg{ctex} 文档类。
%    \begin{macrocode}
\PassOptionsToClass
  {
    UTF8,
    scheme = plain,
    fontset = none,
    zihao = \g_@@_zihao_tl,
    linespread = \g_@@_line_spread_fp,
    \g_@@_ctexbook_options_clist
  }
  { ctexbook }
%    \end{macrocode}
%
% 传入各宏包选项。
%    \begin{macrocode}
\clist_map_inline:nn
  {
    { no-math           } { fontspec     },
    { titles            } { tocloft      },
    { perpage, bottom   } { footmisc     },
    { list = off        } { bicaption    },
    { warnings-off =
      {
        mathtools-overbracket,
        mathtools-colon
      }
    }                     { unicode-math },
    { amsmath, thmmarks } { ntheorem     },
    { chapter           } { algorithm    },
    { algochapter       } { algorithm2e  }
  }
  { \PassOptionsToPackage #1 }
%    \end{macrocode}
%
% 载入 \cls{ctexbook} 文档类。
% 在使用 \XeLaTeX{} 编译时，\cls{ctexbook} 的底层将调用 \pkg{xeCJK}
% 宏包；而在使用 \LuaLaTeX{} 编译时，则将调用 \pkg{LuaTeX-ja} 宏包。
% 两种情况下 \cls{ctexbook} 均会调用 \pkg{fontspec} 宏包。
%    \begin{macrocode}
\LoadClass { ctexbook }
%    \end{macrocode}
%
% 载入各宏包。
%    \begin{macrocode}
\RequirePackage
  {
    mathtools,
    geometry,
    fancyhdr,
    pageslts,
    tocloft,
    footmisc,
    graphicx,
    caption,
    bicaption,
    subcaption,
    xcolor
  }
%    \end{macrocode}
%
% \subsection{用户接口}
%
% \begin{macro}{\sjtusetup}
% 用户设置接口。
%    \begin{macrocode}
\NewDocumentCommand \sjtusetup { } { \keys_set:nn { sjtu } }
%    \end{macrocode}
% \end{macro}
%
% 定义元（meta）键值对。
%    \begin{macrocode}
\keys_define:nn { sjtu }
  {
    info  .meta:nn = { sjtu / info  } {#1} ,
    style .meta:nn = { sjtu / style } {#1} ,
    name  .meta:nn = { sjtu / name  } {#1}
  }
%    \end{macrocode}
%
% \subsubsection{信息录入}
%
% 定义字段。
%    \begin{macrocode}
\clist_map_inline:nn
  {
    title, display_title, running_title, author, supervisor,
    assoc_supervisor, degree, department, major
  }
  {
    \tl_new:c { l_@@_info_ #1 _zh_tl }
    \tl_new:c { l_@@_info_ #1 _en_tl }
    \tl_new:c  { l_@@_info_ #1 _tl }
    \tl_set:cn { l_@@_info_ #1 _tl }
      { \tl_use:c { l_@@_info_ #1 _ \g_@@_lang_tl _tl } }
    \tl_new:c  { l_@@_info_ #1 _aux_tl }
    \tl_set:cn { l_@@_info_ #1 _aux_tl }
      { \tl_use:c { l_@@_info_ #1 _ \g_@@_lang_aux_tl _tl } }
  }
\clist_map_inline:nn
  { keywords, fund }
  {
    \clist_new:c { l_@@_info_ #1 _zh_clist }
    \clist_new:c { l_@@_info_ #1 _en_clist }
  }
\tl_new:N \l_@@_info_id_tl
%    \end{macrocode}
%
% 定义 |sjtu/info| 键值类。
%    \begin{macrocode}
\keys_define:nn { sjtu / info }
  {
    title  .code:n =
      {
        \tl_set:Nn \l_@@_info_title_zh_tl {#1}
        \clist_map_inline:nn
          {
            \l_@@_info_display_title_zh_tl ,
            \l_@@_info_running_title_zh_tl
          }
          { \tl_if_empty:NT ##1 { \tl_set:Nn ##1 {#1} } }
      } ,
    title* .code:n =
      {
        \tl_set:Nn \l_@@_info_title_en_tl {#1}
        \clist_map_inline:nn
          {
            \l_@@_info_display_title_en_tl ,
            \l_@@_info_running_title_en_tl
          }
          { \tl_if_empty:NT ##1 { \tl_set:Nn ##1 {#1} } }
      } ,
    display-title     .tl_set:N = \l_@@_info_display_title_zh_tl ,
    display-title*    .tl_set:N = \l_@@_info_display_title_en_tl ,
    running-title     .tl_set:N = \l_@@_info_running_title_zh_tl ,
    running-title*    .tl_set:N = \l_@@_info_running_title_en_tl ,
    keywords       .clist_set:N = \l_@@_info_keywords_zh_clist ,
    keywords*      .clist_set:N = \l_@@_info_keywords_en_clist ,
    author            .tl_set:N = \l_@@_info_author_zh_tl ,
    author*           .tl_set:N = \l_@@_info_author_en_tl ,
    id                .tl_set:N = \l_@@_info_id_tl ,
    supervisor        .tl_set:N = \l_@@_info_supervisor_zh_tl ,
    supervisor*       .tl_set:N = \l_@@_info_supervisor_en_tl ,
    assoc-supervisor  .tl_set:N = \l_@@_info_assoc_supervisor_zh_tl ,
    assoc-supervisor* .tl_set:N = \l_@@_info_assoc_supervisor_en_tl ,
    degree            .tl_set:N = \l_@@_info_degree_zh_tl ,
    degree*           .tl_set:N = \l_@@_info_degree_en_tl ,
    department        .tl_set:N = \l_@@_info_department_zh_tl ,
    department*       .tl_set:N = \l_@@_info_department_en_tl ,
    major             .tl_set:N = \l_@@_info_major_zh_tl ,
    major*            .tl_set:N = \l_@@_info_major_en_tl ,
    fund           .clist_set:N = \l_@@_info_fund_zh_clist ,
    fund*          .clist_set:N = \l_@@_info_fund_en_clist
  }
%    \end{macrocode}
%
% 盲审模式下隐藏作者、导师姓名等信息。
%    \begin{macrocode}
\ctex_at_end_preamble:n
  {
    \bool_if:NT \g_@@_review_bool
      {
        \clist_map_inline:nn
          {
            author, author*, id, supervisor, supervisor*,
            assoc-supervisor, assoc-supervisor*
          }
          { \keys_set:nn { sjtu / info } { #1 = \c_empty_tl } }
      }
  }
%    \end{macrocode}
%
% \subsubsection{格式选项}
%
% 定义 |sjtu/style| 键值类。
%
% 浮动体与公式编号中的分隔符。
%    \begin{macrocode}
\keys_define:nn { sjtu / style }
  {
    float-font          .tl_set:N = \l_@@_style_float_font_tl ,
    float-font         .initial:n = \zihao { 5 } ,
    float-numsep        .tl_set:N = \l_@@_style_float_numsep_tl ,
    float-numsep       .initial:n = { -- } ,
    equation-numsep     .tl_set:N = \l_@@_style_equation_numsep_tl ,
    equation-numsep    .initial:n = { -- } ,
    title-logo-color   .choice: ,
    title-logo-color  .choices:nn =
      { red, blue, black }
      { \tl_set_eq:NN \l_@@_style_title_logo_color_tl \l_keys_choice_tl } ,
    title-logo-color   .initial:n = { red } ,
    header-logo-color   .choice: ,
    header-logo-color .choices:nn =
      { red, blue, black }
      { \tl_set_eq:NN \l_@@_style_header_logo_color_tl \l_keys_choice_tl } ,
    header-logo-color  .initial:n = { red } ,
    page-number        .cs_set:Np = \@@_page:nn #1#2 ,
    page-number        .initial:n = { --~ Page~ {#1}~ of~ {#2}~ -- }
  }
%</class>
%    \end{macrocode}
%
%    \begin{macrocode}
%<*lang&zh>
\keys_set_known:nn { sjtu / style }
  { page-number = { 第~ {#1}~ 页 \enspace 共~ {#2}~ 页 } }
%</lang&zh>
%    \end{macrocode}
%
% \subsubsection{名称设置}
%
% 定义 |sjtu/name| 键值类。
%
% 设置标准文档类中已定义的名称。
%    \begin{macrocode}
%<*class>
\keys_define:nn { sjtu / name }
  {
    contents       .tl_set:N = \contentsname ,
    listfigure     .tl_set:N = \listfigurename ,
    listtable      .tl_set:N = \listtablename ,
    figure         .tl_set:N = \figurename ,
    table          .tl_set:N = \tablename ,
    index          .tl_set:N = \indexname ,
    appendix       .tl_set:N = \appendixname ,
    proof          .tl_set:N = \proofname ,
    bib            .tl_set:N = \bibname
  }
%    \end{macrocode}
%
% 标准文档类中未定义的名称。
%    \begin{macrocode}
\keys_define:nn { sjtu / name }
  {
    figure*        .tl_set:N = \l_@@_name_figure_aux_tl ,
    figure*       .initial:n = { 图 } ,
    table*         .tl_set:N = \l_@@_name_table_aux_tl ,
    table*        .initial:n = { 表 } ,
    algorithm      .tl_set:N = \l_@@_name_algorithm_tl ,
    algorithm     .initial:n = { Algorithm } ,
    listalgorithm  .tl_set:N = \l_@@_name_listalgorithm_tl ,
    listalgorithm .initial:n = { List~of~Algorithms } ,
    abbr           .tl_set:N = \l_@@_name_abbr_tl ,
    abbr          .initial:n = { Abbreviations } ,
    nom            .tl_set:N = \l_@@_name_nom_tl ,
    nom           .initial:n = { Nomenclature } ,
    summary        .tl_set:N = \l_@@_name_summary_tl ,
    summary       .initial:n = { Summary } ,
    ack            .tl_set:N = \l_@@_name_ack_tl ,
    ack           .initial:n = { Acknowledgements } ,
    resume         .tl_set:N = \l_@@_name_resume_tl ,
    resume        .initial:n = { Resume } ,
    digest         .tl_set:N = \l_@@_name_digest_tl ,
    digest        .initial:n = { Digest } ,
    achv           .tl_set:N = \l_@@_name_achv_tl ,
    achv          .initial:n = { List~of~Research~Achievements },
  }
%</class>
%    \end{macrocode}
%
%    \begin{macrocode}
%<*lang&zh>
\keys_set_known:nn { sjtu / name }
  {
    contents      = 目录 ,
    listfigure    = 插图 ,
    listtable     = 表格 ,
    figure        = 图 ,
    table         = 表 ,
    index         = 索引 ,
    appendix      = 附录 ,
    proof         = 证明 ,
    bib           = 参考文献 ,
    figure*       = Figure ,
    table*        = Table ,
    algorithm     = 算法 ,
    listalgorithm = 算法 ,
    abbr          = 缩略语对照表 ,
    nom           = 符号对照表 ,
    summary       = 全文总结 ,
    ack           = 致谢 ,
    resume        = 个人简历 ,
    digest        = 大摘要 ,
    achv          = 学术论文和科研成果目录
  }
%</lang&zh>
%    \end{macrocode}
%
% \subsection{载入语言配置}
%
%    \begin{macrocode}
%<*class>
\@@_load_lang:
%    \end{macrocode}
%
% \subsection{字体配置}
%
% 如果没有指定数学字体，则根据西文字体设置匹配的数字字体。
%    \begin{macrocode}
\tl_if_empty:NT \g_@@_math_font_tl
  { \tl_gset_eq:NN \g_@@_math_font_tl \g_@@_text_font_tl }
%    \end{macrocode}
%
% 根据操作系统判断默认中文字体配置。
%    \begin{macrocode}
\tl_if_empty:NT \g_@@_cjk_font_tl
  {
    \sys_if_platform_windows:TF
      { \tl_gset:Nn \g_@@_cjk_font_tl { windows } }
      {
        \ctex_if_platform_macos:TF
          { \tl_gset:Nn \g_@@_cjk_font_tl { mac    } }
          { \tl_gset:Nn \g_@@_cjk_font_tl { fandol } }
      }
  }
%    \end{macrocode}
%
% \begin{macro}[int]{\@@_load_font:nn,\@@_load_fontset:}
% 载入字体配置。如果字体配置文件不存在，则载入默认值，并给出警告。
%    \begin{macrocode}
\cs_new_protected:Npn \@@_load_font:nn #1#2
  {
    \str_if_eq:eeF { \tl_use:c{ g_@@_ #1 _font_tl } } { none }
      {
        \ctex_push_file:
          \file_if_exist_input:nF
            { sjtu- #1 -font- \tl_use:c{ g_@@_ #1 _font_tl } .def }
            {
              \msg_warning:nnnn { sjtuthesis } { invalid-font } {#1} {#2}
              \tl_gset:cn { g_@@_ #1 _font_tl } {#2}
              \file_input:n
                { sjtu- #1 -font- \tl_use:c{ g_@@_ #1 _font_tl } .def }
            }
        \ctex_pop_file:
      }
  }
\msg_new:nnn { sjtuthesis } { invalid-font }
  {
    Invalid~ value~ `#1-font~ =~ \tl_use:c{ g_@@_ #1 _font_tl }~ '! \\\\
    Using~ `#2'~ instead.
  }
\cs_new_protected:Nn \@@_load_fontset:
  {
    \clist_map_inline:nn
      {
        { math } { newtx  },
        { text } { newtx  },
        { cjk  } { fandol }
      }
      { \@@_load_font:nn ##1 }
  }
\@onlypreamble \@@_load_font:nn
\@onlypreamble \@@_load_fontset:
\@@_load_fontset:
%</class>
%    \end{macrocode}
% \end{macro}
%
% 西文与数学字体配置。
%    \begin{macrocode}
%<*mathfont>
%<stixtwo|xits|newcm|cambria>\RequirePackage { unicode-math }
%<*stixtwo>
\fontspec_font_if_exist:nTF { STIXTwoMath-Regular.otf }
  {
    \setmathfont { STIXTwoMath-Regular.otf }
      [ StylisticSet = 8 ]
    \setmathfont { STIXTwoMath-Regular.otf }
      [
        range        = { scr, bfscr },
        StylisticSet = 1
      ]
  }
  {
    \setmathfont { STIX2Math.otf }
      [ StylisticSet = 8 ]
    \setmathfont { STIX2Math.otf }
      [
        range        = { scr, bfscr },
        StylisticSet = 1
      ]
  }
%</stixtwo>
%<*xits>
\fontspec_font_if_exist:nTF { XITSMath-Regular.otf }
  {
    \setmathfont { XITSMath-Regular }
      [
        Extension    = .otf,
        BoldFont     = XITSMath-Bold,
        StylisticSet = 8
      ]
    \setmathfont { XITSMath-Regular.otf }
      [
        range        = { cal, bfcal },
        StylisticSet = 1
      ]
  }
  {
    \setmathfont { xits-math }
      [
        Extension    = .otf,
        BoldFont     = *bold,
        StylisticSet = 8
      ]
    \setmathfont { xits-math.otf }
      [
        range        = { cal, bfcal },
        StylisticSet = 1
      ]
  }
%</xits>
%<*newcm>
\setmathfont { NewCMMath-Book.otf }
  [ StylisticSet = 2 ]
\setmathfont { NewCMMath-Book.otf }
  [
    range        = { scr, bfscr },
    StylisticSet = 1
  ]
%</newcm>
%<cambria>\setmathfont { Cambria~Math }
%</mathfont>
%<*textfont>
%<*newtx|newpx>
\setmainfont
%<newtx>  { TeXGyreTermesX }
%<newpx>  { TeXGyrePagellaX }
  [
    Extension       = .otf,
    UprightFont     = *-Regular,
    BoldFont        = *-Bold,
    ItalicFont      = *-Italic,
    BoldItalicFont  = *-BoldItalic,
    SlantedFont     = *-Slanted,
    BoldSlantedFont = *-BoldSlanted
  ]
%</newtx|newpx>
%</textfont>
%<*stixtwo>
\fontspec_font_if_exist:nTF { STIXTwoText-Regular.otf }
  {
%<mathfont>    \setmathrm
%<textfont>    \setmainfont
      { STIXTwoText }
      [
        Extension      = .otf,
        UprightFont    = *-Regular,
        BoldFont       = *-Bold,
        ItalicFont     = *-Italic,
        BoldItalicFont = *-BoldItalic
      ]
  }
  {
%<mathfont>    \setmathrm
%<textfont>    \setmainfont
      { STIX2Text }
      [
        Extension      = .otf,
        UprightFont    = *-Regular,
        BoldFont       = *-Bold,
        ItalicFont     = *-Italic,
        BoldItalicFont = *-BoldItalic
      ]
  }
%</stixtwo>
%<*xits>
\fontspec_font_if_exist:nTF { XITS-Regular.otf }
  {
%<mathfont>    \setmathrm
%<textfont>    \setmainfont
      { XITS }
      [
        Extension      = .otf,
        UprightFont    = *-Regular,
        BoldFont       = *-Bold,
        ItalicFont     = *-Italic,
        BoldItalicFont = *-BoldItalic
      ]
  }
  {
%<mathfont>    \setmathrm
%<textfont>    \setmainfont
      { xits }
      [
        Extension      = .otf,
        UprightFont    = *-regular,
        BoldFont       = *-bold,
        ItalicFont     = *-italic,
        BoldItalicFont = *-bolditalic
      ]
  }
%</xits>
%<*textfont&(newtx|newpx)|stixtwo|xits>
%<mathfont>\setmathsf
%<textfont>\setsansfont
  { texgyreheros }
  [
    Extension      = .otf,
    UprightFont    = *-regular,
    BoldFont       = *-bold,
    ItalicFont     = *-italic,
    BoldItalicFont = *-bolditalic
  ]
%<mathfont>\setmathtt
%<textfont>\setmonofont
  { texgyrecursor }
  [
    Extension      = .otf,
    UprightFont    = *-regular,
    BoldFont       = *-bold,
    ItalicFont     = *-italic,
    BoldItalicFont = *-bolditalic,
    Scale          = MatchLowercase,
    Ligatures      = CommonOff
  ]
%</textfont&(newtx|newpx)|stixtwo|xits>
%<*newcm>
%<mathfont>\setmathrm
%<textfont>\setmainfont
  { NewCM10 }
  [
    Extension    = .otf,
    SizeFeatures = {
      {
        Size        = -9,
        Font        = NewCM08-Book,
        ItalicFont  = NewCM08-BookItalic,
        SlantedFont = NewCM08-Book,
      },
      { Size        = 9- }
    },
    UprightFont         = *-Book,
    BoldFont            = *-Bold,
    ItalicFont          = *-BookItalic,
    BoldItalicFont      = *-BoldItalic,
    SlantedFont         = *-Book,
    BoldSlantedFont     = *-Bold,
    SlantedFeatures     = { FakeSlant = 0.25 },
    BoldSlantedFeatures = { FakeSlant = 0.25 }
  ]
%<mathfont>\setmathsf
%<textfont>\setsansfont
  { NewCMSans10 }
  [
    Extension    = .otf,
    SizeFeatures = {
      {
        Size       = -9,
        Font       = NewCMSans08-Book,
        ItalicFont = NewCMSans08-BookOblique,
      },
      { Size       = 9- }
    },
    UprightFont    = *-Book,
    BoldFont       = *-Bold,
    ItalicFont     = *-BookOblique,
    BoldItalicFont = *-BoldOblique
  ]
%<mathfont>\setmathtt
%<textfont>\setmonofont
  { NewCMMono10 }
  [
    Extension           = .otf,
    UprightFont         = *-Book,
    BoldFont            = *-Bold,
    ItalicFont          = *-BookItalic,
    BoldItalicFont      = *-BoldOblique,
    SlantedFont         = *-Book,
    SlantedFeatures     = { FakeSlant = 0.25 },
    BoldSlantedFont     = *-Bold,
    BoldSlantedFeatures = { FakeSlant = 0.25 }
  ]
%</newcm>
%<*cambria>
%<*mathfont>
\setmathrm { Cambria }
\setmathsf { Calibri }
\setmathtt { Consolas } [ Scale = MatchLowercase ]
%</mathfont>
%<*textfont>
\setmainfont { Cambria }
\setsansfont { Calibri }
\setmonofont { Consolas } [ Scale = MatchLowercase ]
%</textfont>
%</cambria>
%<*times>
\setmainfont { Times~New~Roman } [ Ligatures = Rare ]
\setsansfont { Arial }
\setmonofont { Courier~New } [ Scale = MatchLowercase ]
%</times>
%<*mathfont&(newtx|newpx|lm)>
%<lm>\RequirePackage { amssymb, upgreek }
\tl_set_eq:NN \g_@@_save_encodingdefault_tl \encodingdefault
\tl_set_eq:NN \g_@@_save_rmdefault_tl \rmdefault
\tl_set_eq:NN \g_@@_save_sfdefault_tl \sfdefault
\tl_set_eq:NN \g_@@_save_ttdefault_tl \ttdefault
\tl_set:Nn \encodingdefault { OT1 }
%<newtx>\tl_set:Nn \rmdefault { ntxtlf }
%<newpx>\tl_set:Nn \rmdefault { zpltlf }
%<newtx|newpx>\tl_set:Nn \sfdefault { qhv }
%<newtx|newpx>\tl_set:Nn \ttdefault { ntxtt }
%<newtx>\RequirePackage [ upint ] { newtxmath }
%<newpx>\RequirePackage [ upint ] { newpxmath }
%<*lm>
\RequirePackage { lmodern }
\file_if_exist:nT { cmupint.sty }
  { \RequirePackage { cmupint } }
%</lm>
\tl_set_eq:NN \encodingdefault \g_@@_save_encodingdefault_tl
\tl_set_eq:NN \rmdefault \g_@@_save_rmdefault_tl
\tl_set_eq:NN \sfdefault \g_@@_save_sfdefault_tl
\tl_set_eq:NN \ttdefault \g_@@_save_ttdefault_tl
\RequirePackage { bm }
%</mathfont&(newtx|newpx|lm)>
%    \end{macrocode}
%
% 中文字体配置，在字体未提供对应粗体的情况下，允许使用伪粗。
%    \begin{macrocode}
%<*cjkfont>
%<*windows>
\setCJKmainfont { SimSun   }
  [ AutoFakeBold = 3, ItalicFont = KaiTi ]
\setCJKsansfont { SimHei   } [ BoldFont = * ]
\setCJKmonofont { FangSong }
\setCJKfamilyfont { zhsong } { SimSun   }
  [ AutoFakeBold = 3, ItalicFont = KaiTi ]
\setCJKfamilyfont { zhhei  } { SimHei   } [ BoldFont = * ]
\setCJKfamilyfont { zhkai  } { KaiTi    }
\setCJKfamilyfont { zhfs   } { FangSong }
%</windows>
%<*mac>
\setCJKmainfont { Songti~SC  }
  [
    UprightFont    = *~Light,
    BoldFont       = *~Bold,
    ItalicFont     = Kaiti~SC~Regular,
    BoldItalicFont = Kaiti~SC~Bold
  ]
\setCJKsansfont { Heiti~SC   }
  [
    UprightFont    = *~Medium,
    BoldFont       = *~Medium
  ]
\setCJKmonofont { STFangsong }
\setCJKfamilyfont { zhsong } { Songti~SC  }
  [
    UprightFont    = *~Light,
    BoldFont       = *~Bold
  ]
\setCJKfamilyfont { zhhei  } { Heiti~SC   }
  [
    UprightFont    = *~Medium,
    BoldFont       = *~Medium
  ]
\setCJKfamilyfont { zhfs   } { STFangsong }
\setCJKfamilyfont { zhkai  } { Kaiti~SC   }
  [
    UprightFont    = *~Regular,
    BoldFont       = *~Bold
  ]
%</mac>
%<*ubuntu>
\setCJKmainfont { Noto~Serif~CJK~SC     }
  [
    UprightFont = *~Light,
    BoldFont    = *~Bold,
    ItalicFont  = AR~PL~UKai~CN
  ]
\setCJKsansfont { Noto~Sans~CJK~SC      }
  [
    UprightFont = *~Medium,
    BoldFont    = *~Medium
  ]
\setCJKmonofont { Noto~Sans~Mono~CJK~SC }
\setCJKfamilyfont { zhsong } { Noto~Serif~CJK~SC }
  [
    UprightFont = *~Light,
    BoldFont    = *~Bold,
    ItalicFont  = AR~PL~UKai~CN
  ]
\setCJKfamilyfont { zhhei  } { Noto~Sans~CJK~SC  }
  [
    UprightFont = *~Medium,
    BoldFont    = *~Medium
  ]
\setCJKfamilyfont { zhkai  } { AR~PL~UKai~CN     }
%</ubuntu>
%<*adobe>
\setCJKmainfont { AdobeSongStd-Light       }
  [ AutoFakeBold = 3, ItalicFont = AdobeKaitiStd-Regular ]
\setCJKsansfont { AdobeHeitiStd-Regular    } [ BoldFont = * ]
\setCJKmonofont { AdobeFangsongStd-Regular }
\setCJKfamilyfont { zhsong } { AdobeSongStd-Light       }
  [ AutoFakeBold = 3, ItalicFont = AdobeKaitiStd-Regular ]
\setCJKfamilyfont { zhhei  } { AdobeHeitiStd-Regular    } [ BoldFont = * ]
\setCJKfamilyfont { zhfs   } { AdobeFangsongStd-Regular }
\setCJKfamilyfont { zhkai  } { AdobeKaitiStd-Regular    }
%</adobe>
%<*fandol>
\setCJKmainfont { FandolSong }
  [
    Extension   = .otf,
    UprightFont = *-Regular,
    BoldFont    = *-Bold,
    ItalicFont  = FandolKai-Regular
  ]
\setCJKsansfont { FandolHei  }
  [
    Extension   = .otf,
    UprightFont = *-Regular,
    BoldFont    = *-Regular,
  ]
\setCJKmonofont { FandolFang }
  [
    Extension   = .otf,
    UprightFont = *-Regular,
  ]
\setCJKfamilyfont { zhsong } { FandolSong }
  [
    Extension   = .otf,
    UprightFont = *-Regular,
    BoldFont    = *-Bold
  ]
\setCJKfamilyfont { zhhei  } { FandolHei  }
  [
    Extension   = .otf,
    UprightFont = *-Regular,
    BoldFont    = *-Regular
  ]
\setCJKfamilyfont { zhfs   } { FandolFang }
  [
    Extension   = .otf,
    UprightFont = *-Regular
  ]
\setCJKfamilyfont { zhkai  } { FandolKai  }
  [
    Extension   = .otf,
    UprightFont = *-Regular
  ]
%</fandol>
%<*founder>
\setCJKmainfont { FZShuSong-Z01  }
  [ AutoFakeBold = 3, ItalicFont = FZKai-Z03 ]
\setCJKsansfont { FZHei-B01      } [ BoldFont = * ]
\setCJKmonofont { FZFangSong-Z02 }
\setCJKfamilyfont { zhsong } { FZShuSong-Z01  }
  [ AutoFakeBold = 3, ItalicFont = FZKai-Z03 ]
\setCJKfamilyfont { zhhei  } { FZHei-B01      } [ BoldFont = * ]
\setCJKfamilyfont { zhkai  } { FZKai-Z03      }
\setCJKfamilyfont { zhfs   } { FZFangSong-Z02 }
%</founder>
\NewDocumentCommand \songti   { } { \CJKfamily { zhsong  } }
\NewDocumentCommand \heiti    { } { \CJKfamily { zhhei   } }
%<!ubuntu>\NewDocumentCommand \fangsong { } { \CJKfamily { zhfs    } }
\NewDocumentCommand \kaishu   { } { \CJKfamily { zhkai   } }
%</cjkfont>
%    \end{macrocode}
%
%    \begin{macrocode}
%<*class>
%    \end{macrocode}
%
% \subsection{页面布局}
%
% 利用 \pkg{geometry} 宏包设置纸张大小、页面边距以及页眉高度。
%    \begin{macrocode}
\geometry
  {
    paper      = a4paper,
%<*pg>
    top        = 3.5 cm,
    bottom     = 4.0 cm,
    left       = 3.3 cm,
    right      = 2.8 cm,
    headheight = 1.0 cm,
    headsep    = 0.5 cm,
    footskip   = 1.0 cm
%</pg>
%<*ug>
    vmargin    = 2.54 cm,
    hmargin    = 3.18 cm,
    headheight = 15 bp
%</ug>
  }
%    \end{macrocode}
%
%
% \subsection{页眉页脚}
%
% \pkg{ctex} 宏包使用 \opt{heading} 选项后，会把页面格式设置为 |headings|。
% 因此必须在 \pkg{ctex} 调用之后重新设置 \cs{pagestyle} 为 |fancy|。
%    \begin{macrocode}
\pagestyle { fancy }
%    \end{macrocode}
%
% 页码格式。
%    \begin{macrocode}
\cs_new_eq:NN \@@_thepage:     \prg_do_nothing:
\cs_new_eq:NN \@@_lastpageref: \prg_do_nothing:
%<pg>\keys_set_known:nn { sjtu / style }
%<pg>  { page-number = { ---~ { \bfseries {#1} }~ --- } }
%    \end{macrocode}
%
% 设置页眉页脚。
%    \begin{macrocode}
\fancyhf { }
\if@twoside
  \fancyhead [ RE, LO ] { \zihao { -5 } \c_@@_name_subject_full_zh_tl }
  \fancyhead [ RO, LE ] { \zihao { -5 } \nouppercase { \leftmark } }
\else
  \fancyhead [ L ] { \zihao { -5 } \c_@@_name_subject_full_zh_tl }
  \fancyhead [ R ] { \zihao { -5 } \nouppercase { \leftmark } }
\fi
\fancyfoot [ C ]
  {
    \zihao { -5 }
    \@@_page:nn { \@@_thepage: } { \@@_lastpageref: }
  }
%    \end{macrocode}
%
% 重定义 |plain| 样式。
%    \begin{macrocode}
\fancypagestyle { plain  }
  {
    \fancyfoot [ C ]
      {
        \zihao { -5 }
        \@@_page:nn { \@@_thepage: } { \@@_lastpageref: }
      }
  }
%    \end{macrocode}
%
% 学士论文前置部分不编码（清空页脚）。
%    \begin{macrocode}
\fancypagestyle { nofoot }
  { \fancyfoot { } }
%    \end{macrocode}
%
% 空白页清空页眉页脚。
%    \begin{macrocode}
\RenewDocumentCommand \cleardoublepage { }
  {
    \clearpage
    \if@twoside
      \int_if_odd:nF \c@page
        { \hbox:n { } \thispagestyle { empty } \newpage }
    \fi
  }
%    \end{macrocode}
%
% \subsection{Three matters}
%
% 文档开始使用拉丁字母编码。
%    \begin{macrocode}
\AtBeginDocument
  { \pagenumbering { Alph } }
%    \end{macrocode}
%
% \begin{macro}{\frontmatter}
% 前置部分，大写罗马数字编码。
%    \begin{macrocode}
\RenewDocumentCommand \frontmatter { }
  {
    \cleardoublepage
    \@mainmatterfalse
    \pagenumbering { Roman }
    \cs_gset:Nn \@@_thepage:     { \thepage }
    \cs_gset:Nn \@@_lastpageref: { \lastpageref { pagesLTS.Roman  } }
%<ug>    \pagestyle { nofoot }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\mainmatter}
% 主题部分，阿拉伯数字编码。
%    \begin{macrocode}
\RenewDocumentCommand \mainmatter  { }
  {
    \cleardoublepage
    \@mainmattertrue
    \pagenumbering { arabic }
    \cs_gset:Nn \@@_thepage:     { \thepage }
    \cs_gset:Nn \@@_lastpageref: { \lastpageref { pagesLTS.arabic } }
%<ug>    \pagestyle { plain }
  }
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\backmatter}
% 结尾部分。
%    \begin{macrocode}
\RenewDocumentCommand \backmatter  { }
  {
    \if@openright \cleardoublepage \else \clearpage \fi
    \@mainmatterfalse
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{章节标题结构}
%
% 设置章节标题样式。
%    \begin{macrocode}
\ctex_set:nn { chapter }
  {
    fixskip     = true ,
    beforeskip  = 24 bp ,
    afterskip   = 18 bp ,
    lofskip     = \z@ ,
    lotskip     = \z@ ,
    format      = \zihao { 3 } \bfseries \heiti \centering ,
    nameformat  = ,
    titleformat = ,
    aftername   = \quad ,
    afterindent = true
  }
%</class>
%<*lang&zh>
\ctex_set:nn { chapter }
  {
    name        = { 第 , 章 } ,
    number      = \chinese { chapter }
  }
%</lang&zh>
%<*class>
\ctex_set:nn { section }
  {
    beforeskip  = 24 bp ,
    afterskip   =  6 bp ,
    format      = \zihao { 4 } \bfseries \heiti ,
    afterindent = true
  }
\ctex_set:nn { subsection }
  {
    beforeskip  = 12 bp ,
    afterskip   =  6 bp ,
    format      = \zihao { -4 } \bfseries \heiti ,
    afterindent = true
  }
\ctex_set:nn { subsubsection }
  {
%<ug>    name        = { ( , ) } ,
%<ug>    number      = \arabic { subsubsection } ,
    beforeskip  =  6 bp ,
    afterskip   =  6 bp ,
    format      = \zihao { -4 } \normalfont ,
    afterindent = true
  }
\ctex_set:nn { paragraph }
  { afterindent = true }
\ctex_set:nn { subparagraph }
  { afterindent = true }
\ctex_if_autoindent_touched:F
  { \ctex_set:n { autoindent = true } }
\ctex_set:n { secnumdepth = 3 }
%    \end{macrocode}
%
% \begin{macro}[int]{\verse,\quotation}
% 修改诗歌和引用环境的缩进。
%    \begin{macrocode}
\@@_patch_cmd:Nnn \verse { -1.5em } { -2 \ccwd }
\@@_patch_cmd:Nnn \verse {  1.5em } {  2 \ccwd }
\@@_patch_cmd:Nnn \quotation { 1.5em } { 2 \ccwd }
%    \end{macrocode}
% \end{macro}
%
% 清除章首页的页面格式。
%    \begin{macrocode}
\@@_patch_cmd:Nnn \chapter
  { \thispagestyle } { \use_none:n }
%    \end{macrocode}
%
% \begin{macro}{\SJTU@chapter,\@@_pdf_bookmark:nn,\@@_phantom_section:}
% 定义一个灵活的章标题命令专门处理不同的需求。
%    \begin{macrocode}
\NewDocumentCommand \SJTU@chapter { s O{#3} m O{#2} }
  {
    \if@openright \cleardoublepage \else \clearpage \fi
    \IfBooleanTF {#1}
      { \tl_if_empty:nF {#4} { \@@_pdf_bookmark:nn { 0 } {#4} } }
      {
        \@@_phantom_section:
        \addcontentsline { toc } { chapter } {#4}
      }
    \chapter* {#3}
    \@mkboth { \MakeUppercase {#2} } { \MakeUppercase {#2} }
  }
\cs_new_eq:NN \@@_pdf_bookmark:nn \use_none:nn
\cs_new_eq:NN \@@_phantom_section: \prg_do_nothing:
%    \end{macrocode}
% \end{macro}
%
% \subsection{浮动体}
%
% 下面这组命令使浮动对象的缺省值稍微宽松一点，从而防止幅度对象占据过多的
% 文本页面，也可以防止在很大空白的浮动页上放置很小的图形。
%    \begin{macrocode}
\tl_set:Nn \textfraction      { .15 }
\tl_set:Nn \topfraction       { .85 }
\tl_set:Nn \bottomfraction    { .65 }
\tl_set:Nn \floatpagefraction { .60 }
%    \end{macrocode}
%
% 设置浮动体内的字体。
%    \begin{macrocode}
\@@_patch_cmd:Nnn \@floatboxreset
  { \normalsize } { \l_@@_style_float_font_tl }
%    \end{macrocode}
%
% 题注格式。
%    \begin{macrocode}
\DeclareCaptionFont { SJTU@font     } { \zihao { 5 } \bfseries   }
\DeclareCaptionFont { SJTU@sub@font } { \zihao { 5 } \normalfont }
\DeclareCaptionLabelSeparator { enskip } { \enskip }
\captionsetup
  {
    labelsep      = enskip ,
    justification = centering ,
    font          = SJTU@font
  }
\captionsetup [ sub ]
  {
    format        = hang ,
    justification = justified ,
    font          = SJTU@sub@font
  }
%    \end{macrocode}
%
% 双语题注。
%    \begin{macrocode}
\DeclareCaptionOption { aux-names } [ ]
  {
    \tl_set:Nn \figurename { \l_@@_name_figure_aux_tl }
    \tl_set:Nn \tablename  { \l_@@_name_table_aux_tl  }
  }
\captionsetup [ bi-second ] { aux-names }
%    \end{macrocode}
%
% 定义图、表、公式的编号格式。
%    \begin{macrocode}
\cs_set:Npn \thefigure
  { \thechapter \l_@@_style_float_numsep_tl    \arabic { figure   } }
\cs_set:Npn \thetable
  { \thechapter \l_@@_style_float_numsep_tl    \arabic { table    } }
\cs_set:Npn \theequation
  { \thechapter \l_@@_style_equation_numsep_tl \arabic { equation } }
%    \end{macrocode}
%
% \begin{macro}[int]{\@@_counter_without_chapter:}
% 特殊环境各计数器不随章编号。
%    \begin{macrocode}
\cs_new_protected:Nn \@@_counter_without_chapter:
  {
    \counterwithout { section } { chapter }
    \setcounter     { section } { 0 }
    \counterwithout { figure  } { chapter }
    \setcounter     { figure  } { 0 }
    \counterwithout { table   } { chapter }
    \setcounter     { table   } { 0 }
  }
%    \end{macrocode}
% \end{macro}
%
% \subsection{摘要}
%
%    \begin{macrocode}
\DeclareDocumentEnvironment { abstract  } { }
{ \SJTU@chapter* { \c_@@_name_abstract_zh_tl } [ \c_@@_name_abstract_tl ] }
  {
    \par \mode_leave_vertical: \par \noindent
    { \heiti    \c_@@_name_keywords_zh_tl }
    \clist_use:Nn \l_@@_info_keywords_zh_clist { ， }
  }
\DeclareDocumentEnvironment { abstract* } { }
  { \SJTU@chapter* { \c_@@_name_abstract_en_tl } [ ] }
  {
    \par \mode_leave_vertical: \par \noindent
    { \bfseries \c_@@_name_keywords_en_tl }
    \clist_use:Nn \l_@@_info_keywords_en_clist { ,~ }
  }
%    \end{macrocode}
%
% \subsection{目录}
%
% \begin{macro}{\tableofcontents}
% \begin{macro}{\listoffigures}
% \begin{macro}{\listoffigures*}
% \begin{macro}{\listoftables}
% \begin{macro}{\listoftables*}
% 目录以及图表索引。
%    \begin{macrocode}
\DeclareDocumentCommand \tableofcontents { }
  {
    \SJTU@chapter* { \contentsname }
    \@starttoc { toc }
  }
\NewDocumentCommand \SJTU@listof { m m s }
  {
    \IfBooleanTF {#3}
      { \SJTU@chapter* {#1} }
      { \SJTU@chapter  {#1} }
    \@starttoc { \tl_use:c { ext@ #2 }  }
  }
\DeclareDocumentCommand \listoffigures { }
  { \SJTU@listof { \listfigurename } { figure } }
\DeclareDocumentCommand \listoftables  { }
  { \SJTU@listof { \listtablename  } { table  } }
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}
%
%    \begin{macrocode}
%<zh>\tl_set:Nn \cftdot { \textperiodcentered }
\tl_set:Nn \cftdotsep { 1 }
%<ug>\dim_zero:N \cftbeforechapskip
\tl_set:Nn \cftchappagefont { \normalfont }
\tl_set:Nn \cftchapleader { \normalfont \cftdotfill { \cftdotsep } }
%<pg>\tl_set:Nn \cftchapfont { \bfseries \heiti }
%<ug>\tl_set:Nn \cftchapfont { \normalfont }
%    \end{macrocode}
%
% 图表清单标题前添加名称。
%    \begin{macrocode}
\cs_new_protected:Nn \@@_update_cft_presnum:
  {
    \tl_set:Nn \cftfigpresnum { \figurename \c_space_tl }
    \@@_dim_add_to_wd:Nn \cftfignumwidth { \cftfigpresnum }
    \tl_set:Nn \cfttabpresnum { \tablename  \c_space_tl }
    \@@_dim_add_to_wd:Nn \cfttabnumwidth { \cftfigpresnum }
  }
\ctex_at_end_preamble:n
  { \@@_update_cft_presnum: }
%    \end{macrocode}
%
% \subsection{预定义环境}
%
% 缩略语对照表。
%    \begin{macrocode}
\NewDocumentEnvironment { abbreviation  } { }
  { \SJTU@chapter  { \l_@@_name_abbr_tl } } { }
\NewDocumentEnvironment { abbreviation* } { }
  { \SJTU@chapter* { \l_@@_name_abbr_tl } } { }
%    \end{macrocode}
%
% 符号对照表。
%    \begin{macrocode}
\NewDocumentEnvironment { nomenclature  } { }
  { \SJTU@chapter  { \l_@@_name_nom_tl } } { }
\NewDocumentEnvironment { nomenclature* } { }
  { \SJTU@chapter* { \l_@@_name_nom_tl } } { }
%    \end{macrocode}
%
% 全文总结。
%    \begin{macrocode}
\NewDocumentEnvironment { summary } { }
  { \SJTU@chapter { \l_@@_name_summary_tl } } { }
%    \end{macrocode}
%
% 致谢，盲审模式下隐藏致谢。
%    \begin{macrocode}
\NewDocumentEnvironment { acknowledgements } { +b }
  {
    \bool_if:NF \g_@@_review_bool
      {
        \SJTU@chapter { \l_@@_name_ack_tl }
        #1
      }
  } { }
%    \end{macrocode}
%
% 发表论文与学术成果。
%    \begin{macrocode}
\newcounter { SJTU@bib }
\NewDocumentEnvironment { @bibliolist } { m }
  {
    \cs_if_exist_use:N \bibfont
    \list
      { \@biblabel { \arabic{ SJTU@bib } } }
      {
        \@@_dim_set_to_wd:Nn \labelwidth { \@biblabel {#1} }
        \dim_set_eq:NN \leftmargin \labelwidth
        \dim_add:Nn    \leftmargin { \labelsep }
        \dim_if_exist:NTF \bibitemsep
          {
            \dim_set_eq:NN \itemsep \bibitemsep
            \dim_if_exist:NT \bibparsep
              { \dim_set_eq:NN \parsep \bibparsep }
          }
          {
            \dim_if_exist:NT \bibsep
              {
                \dim_set_eq:NN \itemsep \bibsep
                \dim_zero:N    \parsep
              }
          }
        \@nmbrlisttrue
        \tl_set:Nn  \@listctr    { SJTU@bib }
        \cs_set:Npn \p@SJTU@bib  { }
        \cs_set:Npn \theSJTU@bib { \arabic { SJTU@bib } }
      }
      \sloppy
      \int_set:Nn \clubpenalty  { 4000 }
      \int_set_eq:NN \@clubpenalty \clubpenalty
      \int_set:Nn \widowpenalty { 4000 }
      \char_set_sfcode:nn { `\. } { 1000 }
  }
  {
    \cs_set:Npn \@noitemerr
      { \msg_warning:nnn { sjtuthesis } { empty-environment } { bibliolist } }
    \endlist
  }
\msg_new:nnn { sjtuthesis } { empty-environment }
  { Empty~ `#1'~ environment. }
\NewDocumentEnvironment { achievements } { }
  { \SJTU@chapter { \l_@@_name_achv_tl } } { }
\NewDocumentEnvironment { bibliolist  } { m +b }
  {
    \bool_if:NF \g_@@_review_bool
      {
        \cs_set:Npn \@noitemerr { }
        \begin { @bibliolist } {#1}
        #2
        \end { @bibliolist }
      }
  } { }
\NewDocumentEnvironment { bibliolist* } { m +b }
  {
    \bool_if:NT \g_@@_review_bool
      {
        \cs_set:Npn \@noitemerr { }
        \begin { @bibliolist } {#1}
        #2
        \end { @bibliolist }
      }
  } { }
%    \end{macrocode}
%
% 简历。
%    \begin{macrocode}
\NewDocumentEnvironment { resume } { +b }
  {
    \bool_if:NF \g_@@_review_bool
      {
        \SJTU@chapter { \l_@@_name_resume_tl }
        #1
      }
  } { }
%    \end{macrocode}
%
% 大摘要。
%    \begin{macrocode}
\NewDocumentEnvironment { digest } { +b }
  {
    \AtEndDocument
      {
        \if@openright \cleardoublepage \else \clearpage \fi
        \pagenumbering { roman }
        \cs_gset:Nn \@@_thepage:     { \theCurrentPageLocal }
        \cs_gset:Nn \@@_lastpageref: { \lastpageref { pagesLTS.roman.local } }
        \cs_gset_eq:NN \addcontentsline \use_none:nnn
        \@@_counter_without_chapter:
        \SJTU@chapter* [ \l_@@_name_digest_tl ]
          { \MakeUppercase \l_@@_info_title_aux_tl }
        #1
      }
  } { }
%    \end{macrocode}
%
% \subsection{其他宏包的设置}
%
% 这些宏包并非格式要求，但是为了方便同学们使用，在这里进行简单设置。
%
% \subsubsection{\pkg{hyperref} 宏包}
%
%    \begin{macrocode}
\ctex_at_end_package:nn { hyperref }
  {
    \hypersetup
      {
        linktoc            = all,
        bookmarksdepth     = 2,
        bookmarksnumbered  = true,
        bookmarksopen      = true,
        bookmarksopenlevel = 1,
        unicode            = true,
        psdextra           = true,
        breaklinks         = true,
        pdfdisplaydoctitle = true
      }
    \int_new:N \g_@@_bookmark_int
    \cs_gset_protected:Npn \@@_pdf_bookmark:nn #1#2
      {
        \phantomsection
        \int_gincr:N \g_@@_bookmark_int
        \pdfbookmark [#1] {#2}
          { sjtuchapter. \int_use:N \g_@@_bookmark_int }
      }
    \cs_gset_eq:NN \@@_phantom_section: \phantomsection
    \pdfstringdefDisableCommands
      {
        \cs_set_eq:NN \\       \prg_do_nothing:
        \cs_set_eq:NN \quad    \c_empty_tl
        \cs_set_eq:NN \qquad   \c_empty_tl
        \cs_set_eq:NN \hspace  \use_none:n
      }
    \ctex_after_end_preamble:n
      {
        \hypersetup
          {
            pdftitle    = \l_@@_info_title_zh_tl,
            pdfsubject  = \c_@@_name_subject_full_zh_tl,
            pdfkeywords = \l_@@_info_keywords_zh_clist,
            pdfauthor   = \l_@@_info_author_zh_tl
          }
      }
  }
%    \end{macrocode}
%
% \subsubsection{\pkg{threeparttable} 宏包}
%
%    \begin{macrocode}
\ctex_at_end_package:nn { threeparttable }
  { \tl_put_right:Nn \TPTnoteSettings { \footnotesize } }
%    \end{macrocode}
%
% \subsubsection{\pkg{longtable} 宏包}
%
%    \begin{macrocode}
\ctex_at_end_package:nn { longtable }
  { \AtBeginEnvironment { longtable } { \l_@@_style_float_font_tl } }
%    \end{macrocode}
%
% \subsubsection{\pkg{amsthm} 宏包和 \pkg{ntheorem} 宏包}
%
%    \begin{macrocode}
\cs_new_protected:Nn \@@_new_theorems:
  {
    \clist_map_inline:nn
      {
        assumption, axiom, conjecture, corollary, definition, example,
        exercise, lemma, problem, proposition, theorem
      }
      { \newtheorem {##1} { \tl_use:c { c_@@_name_ ##1 _tl } } [ chapter ] }
    \clist_map_inline:nn
      { remark, solution }
      { \newtheorem*{##1} { \tl_use:c { c_@@_name_ ##1 _tl } } }
  }
%    \end{macrocode}
%
% \pkg{amsthm} 宏包
%    \begin{macrocode}
\ctex_at_begin_package:nn { amsthm }
  {
    \cs_if_exist:NT \openbox
      {
        \cs_new_eq:NN \@@_save_openbox: \openbox
        \cs_undefine:N \openbox
      }
  }
\ctex_at_end_package:nn { amsthm }
  {
    \cs_if_exist:NT \@@_save_openbox:
      { \cs_set_eq:NN \openbox \@@_save_openbox: }
    \RenewDocumentEnvironment { proof } { O{ \proofname } }
      {
        \par \pushQED { \qed }
        \normalfont \dim_zero:N \topsep
        \trivlist
        \item
          [
            \skip_horizontal:N \labelsep
            \bfseries \heiti #1 \@addpunct { \enskip }
          ]
        \ignorespaces
      }
      { \popQED \endtrivlist \@endpefalse }
    \newtheoremstyle { sjtu }
      { } { } { \normalfont } { } { \bfseries \heiti } { } { \ccwd } { }
    \theoremstyle { sjtu }
    \@@_new_theorems:
  }
%    \end{macrocode}
%
% \pkg{ntheorem} 宏包
%    \begin{macrocode}
\ctex_at_end_package:nn { ntheorem }
  {
    \theoremheaderfont { \bfseries \heiti }
    \theorembodyfont   { \normalfont      }
    \theoremseparator  { \enskip          }
    \theoremsymbol { \ensuremath { \square } }
    \newtheorem* { proof } { \proofname }
    \theoremsymbol { }
    \@@_new_theorems:
  }
%    \end{macrocode}
%
% \subsubsection{\pkg{algorithm} 宏包和 \pkg{algorithm2e} 宏包}
%
%    \begin{macrocode}
\cs_new_protected:Npn \@@_newlistof:nnnnn #1#2#3#4#5
  {
    \exp_args:Nno \newlistentry {#2} { \tl_use:c { ext@ #3 } } { 0 }
    \exp_args:No \newcounter { \tl_use:c { ext@ #3 } depth }
    \exp_args:No \setcounter { \tl_use:c { ext@ #3 } depth } { 1 }
    \dim_set:cn { cft #2 indent   } { 1.5 em }
    \dim_set:cn { cft #2 numwidth } { 2.3 em }
    \cs_set_eq:cc { l@ #3 } { l@ #2 }
    \@@_appto_cmd:Nn \@@_update_cft_presnum:
      {
        \tl_set:cn { cft #2 presnum } { #4 \c_space_tl }
        \@@_dim_add_to_wd:cn { cft #2 numwidth }
          { \tl_use:c { cft #2 presnum } }
      }
    \exp_args:Nc \DeclareDocumentCommand { listof #1 s } { }
      { \SJTU@listof {#5} {#3} }
    \cs_set:cpn { the #3 }
      { \thechapter \l_@@_style_float_numsep_tl \arabic {#3} }
    \@@_appto_cmd:Nn \@@_counter_without_chapter:
      {
        \counterwithout {#3} { chapter }
        \setcounter     {#3} { 0 }
      }
  }
%    \end{macrocode}
%
% \pkg{algorithm} 宏包
%    \begin{macrocode}
\ctex_at_end_package:nn { algorithm }
  {
    \tl_set:Nn \fname@algorithm   { \l_@@_name_algorithm_tl     }
    \tl_set:Nn \listalgorithmname { \l_@@_name_listalgorithm_tl }
    \@@_newlistof:nnnnn { algorithm } { alg } { algorithm }
      { \fname@algorithm } { \listalgorithmname }
  }
%    \end{macrocode}
%
% \pkg{algorithm2e} 宏包
%    \begin{macrocode}
\ctex_at_begin_package:nn { algorithm2e }
  { \cs_set_eq:NN \@@_save_chapter:w \@chapter }
\ctex_at_end_package:nn { algorithm2e }
  {
    \cs_set_eq:NN \@chapter \@@_save_chapter:w
    \SetAlgorithmName { \l_@@_name_algorithm_tl     }
                      { \l_@@_name_algorithm_tl     }
                      { \l_@@_name_listalgorithm_tl }
    \SetAlgoCaptionSeparator { \enskip }
    \@@_newlistof:nnnnn { algorithm } { alg } { algocf }
      { \algorithmcfname } { \listalgorithmcfname }
    \@@_patch_cmd:Nnn \algocf@latexcaption
      { \addcontentsline }
      { \caption@iflist { \addcontentsline } { \use_none:nnn } }
  }
%    \end{macrocode}
%
% \subsubsection{\pkg{listings} 宏包}
%    \begin{macrocode}
\ctex_at_end_package:nn { listings }
  {
    \lstdefinestyle { lstStyleCode }
      {
        aboveskip         = \medskipamount ,
        belowskip         = \medskipamount ,
        basicstyle        = \ttfamily \zihao { 6 } ,
        commentstyle      = \slshape \color { black!60 } ,
        stringstyle       = \color { green!40!black!100 } ,
        keywordstyle      = \bfseries \color { blue!50!black } ,
        extendedchars     = false ,
        upquote           = true ,
        tabsize           = 2 ,
        showstringspaces  = false ,
        xleftmargin       = 1 em ,
        xrightmargin      = 1 em ,
        breaklines        = false ,
        framexleftmargin  = 1 em ,
        framexrightmargin = 1 em ,
        backgroundcolor   = \color { gray!10 } ,
        columns           = flexible ,
        keepspaces        = true ,
        texcl             = true ,
        mathescape        = true
      }
  }
%    \end{macrocode}
%
%    \begin{macrocode}
%</class>
%    \end{macrocode}
%
%    \begin{macrocode}
%<*lang>
\@@_define_name:nnn { univ }
  { 上海交通大学 }
  { Shanghai~Jiao~Tong~University }
\@@_define_name_from_list:nNnn { degree_level }
  \g_@@_thesis_type_int
  { 博士  , 硕士  , 学士     }
  { Doctor, Master, Bachelor }
\@@_define_name:nnn { subject_full }
  {
    \c_@@_name_univ_zh_tl
    \c_@@_name_degree_level_zh_tl
    学位论文
  }
  {
    Dissertation~Submitted~to~
    \c_@@_name_univ_en_tl \c_space_tl ~
    for~the~Degree~of~
    \c_@@_name_degree_level_en_tl
  }
\@@_define_name:nnn { subject_short }
  { \c_@@_name_degree_level_zh_tl 学位论文  }
  { \c_@@_name_degree_level_en_tl 's~Thesis }
\tl_const:Nn \c_@@_orig_decl_text_tl
  {
    本人郑重声明：所呈交的学位论文，是本人在导师的指导下，独立进行研究工
    作所取得的成果。除文中已经注明引用的内容外，本论文不包含任何其他个人
    或集体已经发表或撰写过的作品成果。对本文的研究做出重要贡献的个人和集
    体，均已在文中以明确方式标明。本人完全意识到本声明的法律结果由本人承
    担。
  }
\tl_const:Nn \c_@@_auth_decl_text_tl
  {
    本学位论文作者完全了解学校有关保留、使用学位论文的规定，同意学校保留
    并向国家有关部门或机构送交论文的复印件和电子版，允许论文被查阅和借
    阅。
  }
\clist_map_inline:nn
  {
    { abstract } { 摘 \quad 要 } { Abstract    } ,
    { keywords } { 关键词：    } { Key~words:~ }
  }
  { \@@_define_name:nnn #1 }
\clist_map_inline:nn
  {
    { assumption  }
%<zh>    { 假设        } ,
%<en>    { Assumption  } ,
    { axiom       }
%<zh>    { 公理        } ,
%<en>    { Axiom       } ,
    { conjecture  }
%<zh>    { 猜想        } ,
%<en>    { Conjecture  } ,
    { corollary   }
%<zh>    { 推论        } ,
%<en>    { Corollary   } ,
    { definition  }
%<zh>    { 定义        } ,
%<en>    { Definition  } ,
    { example     }
%<zh>    { 例          } ,
%<en>    { Example     } ,
    { exercise    }
%<zh>    { 练习        } ,
%<en>    { Exercise    } ,
    { lemma       }
%<zh>    { 引理        } ,
%<en>    { Lemma       } ,
    { problem     }
%<zh>    { 问题        } ,
%<en>    { Problem     } ,
    { proposition }
%<zh>    { 命题        } ,
%<en>    { Proposition } ,
    { remark      }
%<zh>    { 注          } ,
%<en>    { Remark      } ,
    { solution    }
%<zh>    { 解          } ,
%<en>    { Solution    } ,
    { theorem     }
%<zh>    { 定理        } ,
%<en>    { Theorem     } ,
  }
  { \@@_define_name:nn #1 }
%    \end{macrocode}
%
%    \begin{macrocode}
%</lang>
%    \end{macrocode}
%
% \end{implementation}
%
% \Finale
%
\endinput
